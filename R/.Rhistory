z = xx[[1]][[11]][[2]][[4]][1:6, 1:6]
s = xx[[1]][[11]][[2]][[5]][1:6]
xt = rep(rep(x, each = length(y)), each = length(s))
yt = rep(rep(x, length(x)), each = length(s))
zt = rep(as.numeric(z), each = length(s))
st = rep(s, length(x) * length(y))
xr = rep(x, each = length(y))
yr = rep(y, length(x))
zr = as.numeric(z)
tot = length(x) * length(y)
det = seq(1, length(xr), by = 20)
x1 = xr[1:(tot - length(x))][-det]
x2 = xr[(length(y) + 1):tot][-det]
y1 = yr[1:(tot - length(x))][-det]
y2 = yr[(length(y) + 1):tot][-det]
z11 = zr[1:(tot - length(x))][-(det - 1)]
z12 = zr[2:(tot - length(x) + 1)][-(det - 1)]
z21 = zr[(length(x) + 1) : (tot - 1)][-(det - 1)]
z22 = zr[(length(x) + 2) : (tot)][-(det - 1)]
x1 = rep(x1, each = length(s) - 1)
x2 = rep(x2, each = length(s) - 1)
y1 = rep(y1, each = length(s) - 1)
y2 = rep(y2, each = length(s) - 1)
z11 = rep(z11, each = length(s) - 1)
z12 = rep(z12, each = length(s) - 1)
z21 = rep(z21, each = length(s) - 1)
z22 = rep(z22, each = length(s) - 1)
low = st[1:((length(s) - 1) *(length(x) - 1) * (length(y) - 1))]
high = st[(length(s)+1):(length(s) *(length(x) - 1) * (length(y) - 1))]
z1 = z11; z2 = z21; x1 = x1; x2 = x2;
find = function(low = 3, high = 4, x1, x2, z1, z2)
{
v1 = v2 = v3 = rep(NA, length(z1))
c = (z1 - high) / (z1 - z2)
v1 = ifelse(z2 > high || z1 < low, v1, numeric(length(z1)))
v2 = ifelse(z1 < high, x1,
ifelse(z1 == Inf, x2, x1 + c * (x2 - x1)))
c = (z2 -low) / (z2 - z1)
v3= ifelse(z2 == -Inf, x1,
ifelse(z2 <= low, x2 - c * (x2 - x1), NA))
cbind(v2, v3)
}
## vectors-join
reduce = function(vbind, vremian)
{
vna = is.na(vbind)
vbind[vna] = vremian[vna]
vremian[vna] = NA
cbind(vbind, vremian)
}
## inside if z1 > z2
vout1 = find(x1 = x1, x2 = x2, z1 = z11, z2 = z21)
vout2 = find(x1 = y1, x2 = x2, z1 = z21, z2 = z21)
vout3 = find(x1 = x2, x2 = y2, z1 = z22, z2 = z12)
vout4 = find(x1 = y2, x2 = x1, z1 = z12, z2 = z11)
det = seq(1, length(xr), by = length(x))
x1 = xr[1:(tot - length(x))][-det]
x2 = xr[(length(y) + 1):tot][-det]
y1 = yr[1:(tot - length(x))][-det]
y2 = yr[(length(y) + 1):tot][-det]
z11 = zr[1:(tot - length(x))][-(det - 1)]
z12 = zr[2:(tot - length(x) + 1)][-(det - 1)]
z21 = zr[(length(x) + 1) : (tot - 1)][-(det - 1)]
z22 = zr[(length(x) + 2) : (tot)][-(det - 1)]
x1 = rep(x1, each = length(s) - 1)
x2 = rep(x2, each = length(s) - 1)
y1 = rep(y1, each = length(s) - 1)
y2 = rep(y2, each = length(s) - 1)
z11 = rep(z11, each = length(s) - 1)
z12 = rep(z12, each = length(s) - 1)
z21 = rep(z21, each = length(s) - 1)
z22 = rep(z22, each = length(s) - 1)
low = st[1:((length(s) - 1) *(length(x) - 1) * (length(y) - 1))]
high = st[(length(s)+1):(length(s) *(length(x) - 1) * (length(y) - 1))]
z1 = z11; z2 = z21; x1 = x1; x2 = x2;
find = function(low = 3, high = 4, x1, x2, z1, z2)
{
v1 = v2 = v3 = rep(NA, length(z1))
c = (z1 - high) / (z1 - z2)
v1 = ifelse(z2 > high || z1 < low, v1, numeric(length(z1)))
v2 = ifelse(z1 < high, x1,
ifelse(z1 == Inf, x2, x1 + c * (x2 - x1)))
c = (z2 -low) / (z2 - z1)
v3= ifelse(z2 == -Inf, x1,
ifelse(z2 <= low, x2 - c * (x2 - x1), NA))
cbind(v2, v3)
}
reduce = function(vbind, vremian)
{
vna = is.na(vbind)
vbind[vna] = vremian[vna]
vremian[vna] = NA
cbind(vbind, vremian)
}
vout1 = find(x1 = x1, x2 = x2, z1 = z11, z2 = z21)
vout2 = find(x1 = y1, x2 = x2, z1 = z21, z2 = z21)
vout3 = find(x1 = x2, x2 = y2, z1 = z22, z2 = z12)
vout4 = find(x1 = y2, x2 = x1, z1 = z12, z2 = z11)
vp0 = cbind(vout1, vout2, vout3, vout4)
vp1 = cbind(vp0[,1],
reduce(vp0[,2], vp0[,1]),
reduce(vp0[,2], vp0[,1]),
reduce(vp0[,2], vp0[,1]),
vp0[,8])
vp2 = cbind(vp1[,1], vp1[,2],
reduce(vp1[,3], vp1[,4]),
reduce(vp1[,5], vp1[,6]),
reduce(vp1[,7], vp1[,8]))
vp3 = cbind(vp2[,1], vp2[,2], vp2[,3],
reduce(vp2[,4], vp2[,5]),
reduce(vp2[,6], vp2[,7]), vp2[,8])
vp3
vp1
vp3 = cbind(vp2[,1], vp2[,2], vp2[,3],
reduce(vp2[,4], vp2[,5]),
reduce(vp2[,6], vp2[,7]), vp2[,8])
vp4 = cbind(vp3[,1:4],
reduce(vp3[,5], vp3[,6]),
vp3[,7], vp3[,8])
vp4
vout1
vout
vout2
ff = function(){
x <- 10*1:nrow(volcano)
y <- 10*1:ncol(volcano)
a <- expand.grid(1:20, 1:20)
b <- matrix(a[,1] + a[,2], 20)
filled.contour(x = 1:20, y = 1:20, z = b,
plot.axes = { axis(1); axis(2); points(10, 10) })
}
source('H:/New folder/gridgraphics/tests/loading.R')
ff()
grid.echo()
source('C:/Users/yeamin/Desktop/master/loading.r')
grid.echo()
ff()
xx = recordPlot()
x = xx[[1]][[11]][[2]][[2]][1:6]
y = xx[[1]][[11]][[2]][[3]][1:6]
z = xx[[1]][[11]][[2]][[4]][1:6, 1:6]
s = xx[[1]][[11]][[2]][[5]][1:6]
xt = rep(rep(x, each = length(y)), each = length(s))
yt = rep(rep(x, length(x)), each = length(s))
zt = rep(as.numeric(z), each = length(s))
st = rep(s, (length(x) - 1) * (length(y) - 1))
xr = rep(x, each = length(y))
yr = rep(y, length(x))
zr = as.numeric(z)
tot = length(x) * length(y)
det = seq(1, length(xr), by = length(x))
x1 = xr[1:(tot - length(x))][-det]
x2 = xr[(length(y) + 1):tot][-det]
y1 = yr[1:(tot - length(x))][-(det - 1)]
y2 = yr[(length(y) + 1):tot][-det]
z11 = zr[1:(tot - length(x))][-(det - 1)]
z12 = zr[2:(tot - length(x) + 1)][-(det - 1)]
z21 = zr[(length(x) + 1) : (tot - 1)][-(det - 1)]
z22 = zr[(length(x) + 2) : (tot)][-(det - 1)]
x1 = rep(x1, each = length(s) - 1)
x2 = rep(x2, each = length(s) - 1)
y1 = rep(y1, each = length(s) - 1)
y2 = rep(y2, each = length(s) - 1)
z11 = rep(z11, each = length(s) - 1)
z12 = rep(z12, each = length(s) - 1)
z21 = rep(z21, each = length(s) - 1)
z22 = rep(z22, each = length(s) - 1)
scut = seq(0, length(st), by = 6)[-1]
low = st[-scut]
high = st[-((scut - 6) + 1)]
z1 = z11; z2 = z21; x1 = x1; x2 = x2;
v.1 = find(low = low, high = high, x1 = x1, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[1]]
v.2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[1]]
v.3 = find(low = low, high = high, x1 = x2, y1 = y2, x2 = x1, y2 = y2, z1 = z22, z2 = z12)[[1]]
v.4 = find(low = low, high = high, x1 = y2, y1 = x1, x2 = y1, y2 = x1, z1 = z12, z2 = z11)[[1]]
v_1 = find(low = low, high = high, x1 = x1, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[2]]
v_2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[2]]
v_3 = find(low = low, high = high, x1 = x2, y1 = y2, x2 = x1, y2 = y2, z1 = z22, z2 = z12)[[2]]
v_4 = find(low = low, high = high, x1 = y2, y1 = x1, x2 = y1, y2 = x1, z1 = z12, z2 = z11)[[2]]
vx = cbind(v.1, v_2, v.3, v_4)
vy = cbind(v_1, v.2, v_3, v.4)
xPoints = reduceProc(vx)
yPoints = reduceProc(vy)
low
high
x1[2]
y1[2]
z11
z11[2]
z21[2]
yPoints
low[2]
high[2]
y1
y1[2]
x2[2]
z21[2]
y2[2]
x2[2]
z22[2]
debug(find)
v.2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[1]]
z1[2] < z2[2]
z1[2] > low[2]
a = x1 + c * (x2 - x1)
x1 + c * (x2 - x1)
a = x1 + c * (x2 - x1)
a[2]
x_1
x_1 = ifelse(z1 > low, x1,
ifelse(z1 == -Inf, x2, x1 + c * (x2 - x1)))
x_1
undebug(find)
xx = recordPlot()
x = xx[[1]][[11]][[2]][[2]][1:6]
y = xx[[1]][[11]][[2]][[3]][1:6]
z = xx[[1]][[11]][[2]][[4]][1:6, 1:6]
s = xx[[1]][[11]][[2]][[5]][1:6]
xt = rep(rep(x, each = length(y)), each = length(s))
yt = rep(rep(x, length(x)), each = length(s))
zt = rep(as.numeric(z), each = length(s))
st = rep(s, (length(x) - 1) * (length(y) - 1))
xr = rep(x, each = length(y))
yr = rep(y, length(x))
zr = as.numeric(z)
tot = length(x) * length(y)
det = seq(1, length(xr), by = length(x))
x1 = xr[1:(tot - length(x))][-det]
x2 = xr[(length(y) + 1):tot][-det]
y1 = yr[1:(tot - length(x))][-(det - 1)]
y2 = yr[(length(y) + 1):tot][-det]
z11 = zr[1:(tot - length(x))][-(det - 1)]
z12 = zr[2:(tot - length(x) + 1)][-(det - 1)]
z21 = zr[(length(x) + 1) : (tot - 1)][-(det - 1)]
z22 = zr[(length(x) + 2) : (tot)][-(det - 1)]
x1 = rep(x1, each = length(s) - 1)
x2 = rep(x2, each = length(s) - 1)
y1 = rep(y1, each = length(s) - 1)
y2 = rep(y2, each = length(s) - 1)
z11 = rep(z11, each = length(s) - 1)
z12 = rep(z12, each = length(s) - 1)
z21 = rep(z21, each = length(s) - 1)
z22 = rep(z22, each = length(s) - 1)
scut = seq(0, length(st), by = 6)[-1]
low = st[-scut]
high = st[-((scut - 6) + 1)]
z1 = z11; z2 = z21; x1 = x1; x2 = x2;
## vectors-join
## inside if z1 > z2
source('C:/Users/yeamin/Desktop/master/loading.r')
v.1 = find(low = low, high = high, x1 = x1, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[1]]
v.2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[1]]
v.3 = find(low = low, high = high, x1 = x2, y1 = y2, x2 = x1, y2 = y2, z1 = z22, z2 = z12)[[1]]
v.4 = find(low = low, high = high, x1 = y2, y1 = x1, x2 = y1, y2 = x1, z1 = z12, z2 = z11)[[1]]
v_1 = find(low = low, high = high, x1 = x1, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[2]]
v_2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[2]]
v_3 = find(low = low, high = high, x1 = x2, y1 = y2, x2 = x1, y2 = y2, z1 = z22, z2 = z12)[[2]]
v_4 = find(low = low, high = high, x1 = y2, y1 = x1, x2 = y1, y2 = x1, z1 = z12, z2 = z11)[[2]]
vx = cbind(v.1, v_2, v.3, v_4)
vy = cbind(v_1, v.2, v_3, v.4)
xPoints = reduceProc(vx)
yPoints = reduceProc(vy)
xPoints
reduceProc
v.1 = find(low = low, high = high, x1 = x1, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[1]]
debug(find)
xx = recordPlot()
x = xx[[1]][[11]][[2]][[2]][1:6]
y = xx[[1]][[11]][[2]][[3]][1:6]
z = xx[[1]][[11]][[2]][[4]][1:6, 1:6]
s = xx[[1]][[11]][[2]][[5]][1:6]
xt = rep(rep(x, each = length(y)), each = length(s))
yt = rep(rep(x, length(x)), each = length(s))
zt = rep(as.numeric(z), each = length(s))
st = rep(s, (length(x) - 1) * (length(y) - 1))
xr = rep(x, each = length(y))
yr = rep(y, length(x))
zr = as.numeric(z)
tot = length(x) * length(y)
det = seq(1, length(xr), by = length(x))
x1 = xr[1:(tot - length(x))][-det]
x2 = xr[(length(y) + 1):tot][-det]
y1 = yr[1:(tot - length(x))][-(det - 1)]
y2 = yr[(length(y) + 1):tot][-det]
z11 = zr[1:(tot - length(x))][-(det - 1)]
z12 = zr[2:(tot - length(x) + 1)][-(det - 1)]
z21 = zr[(length(x) + 1) : (tot - 1)][-(det - 1)]
z22 = zr[(length(x) + 2) : (tot)][-(det - 1)]
x1 = rep(x1, each = length(s) - 1)
x2 = rep(x2, each = length(s) - 1)
y1 = rep(y1, each = length(s) - 1)
y2 = rep(y2, each = length(s) - 1)
z11 = rep(z11, each = length(s) - 1)
z12 = rep(z12, each = length(s) - 1)
z21 = rep(z21, each = length(s) - 1)
z22 = rep(z22, each = length(s) - 1)
scut = seq(0, length(st), by = 6)[-1]
low = st[-scut]
high = st[-((scut - 6) + 1)]
z1 = z11; z2 = z21; x1 = x1; x2 = x2;
## vectors-join
source('C:/Users/yeamin/Desktop/master/loading.r')
v.1 = find(low = low, high = high, x1 = x1, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[1]]
debug(find)
v.1 = find(low = low, high = high, x1 = x1, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[1]]
y1
y1[2]
y1[2]
z21[2]
z22[2]
x2[2]
y1[2]
x1
y1
source('C:/Users/yeamin/Desktop/master/loading.r')
v.1 = find(low = low, high = high, x1 = x1, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[1]]
y1
x1
x2
debug(find)
v.1 = find(low = low, high = high, x1 = x2, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[1]]
x_1
z2 < low
z2[2]
z2
low[2]
high[2]
z1[2]
z1
z11
z21
z21[2]
z22[2]
v.2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[1]]
z2 < low || z1 > high
source('C:/Users/yeamin/Desktop/master/loading.r')
v.2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[1]]
debug(find)
v.2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[1]]
z2 < low || z1 > high
z2 < low | z1 > high
x_1
x_2
x_1
y_2
vx = cbind(v.1, v_2, v.3, v_4)
vy = cbind(v_1, v.2, v_3, v.4)
xPoints = reduceProc(vx)
yPoints = reduceProc(vy)
yPoints
xPoints
v_2
vx
xPoints = reduceProc(vx)
xPoints
vx
v.1
debug(find)
v_2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[2]]
x_1
xout.1 = ifelse(z1 < high, x.1,
ifelse(z1 < z2, x_1,
x..1))
xout.1
z1 < high
source('C:/Users/yeamin/Desktop/master/loading.r')
v.1 = find(low = low, high = high, x1 = x2, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[1]]
v.2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[1]]
v.3 = find(low = low, high = high, x1 = x2, y1 = y2, x2 = x1, y2 = y2, z1 = z22, z2 = z12)[[1]]
v.4 = find(low = low, high = high, x1 = y2, y1 = x1, x2 = y1, y2 = x1, z1 = z12, z2 = z11)[[1]]
v_1 = find(low = low, high = high, x1 = x1, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[2]]
v_2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[2]]
v_3 = find(low = low, high = high, x1 = x2, y1 = y2, x2 = x1, y2 = y2, z1 = z22, z2 = z12)[[2]]
v_4 = find(low = low, high = high, x1 = y2, y1 = x1, x2 = y1, y2 = x1, z1 = z12, z2 = z11)[[2]]
vx = cbind(v.1, v_2, v.3, v_4)
vy = cbind(v_1, v.2, v_3, v.4)
xPoints = reduceProc(vx)
yPoints = reduceProc(vy)
xPoints
source('C:/Users/yeamin/Desktop/master/loading.r')
v.1 = find(low = low, high = high, x1 = x2, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[1]]
v.2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[1]]
v.3 = find(low = low, high = high, x1 = x2, y1 = y2, x2 = x1, y2 = y2, z1 = z22, z2 = z12)[[1]]
v.4 = find(low = low, high = high, x1 = y2, y1 = x1, x2 = y1, y2 = x1, z1 = z12, z2 = z11)[[1]]
v_1 = find(low = low, high = high, x1 = x1, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[2]]
v_2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[2]]
v_3 = find(low = low, high = high, x1 = x2, y1 = y2, x2 = x1, y2 = y2, z1 = z22, z2 = z12)[[2]]
v_4 = find(low = low, high = high, x1 = y2, y1 = x1, x2 = y1, y2 = x1, z1 = z12, z2 = z11)[[2]]
vx = cbind(v.1, v_2, v.3, v_4)
vy = cbind(v_1, v.2, v_3, v.4)
xPoints = reduceProc(vx)
yPoints = reduceProc(vy)
xPoints
source('C:/Users/yeamin/Desktop/master/loading.r')
v.1 = find(low = low, high = high, x1 = x2, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[1]]
v.2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[1]]
v.3 = find(low = low, high = high, x1 = x2, y1 = y2, x2 = x1, y2 = y2, z1 = z22, z2 = z12)[[1]]
v.4 = find(low = low, high = high, x1 = y2, y1 = x1, x2 = y1, y2 = x1, z1 = z12, z2 = z11)[[1]]
v_1 = find(low = low, high = high, x1 = x1, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[2]]
v_2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[2]]
v_3 = find(low = low, high = high, x1 = x2, y1 = y2, x2 = x1, y2 = y2, z1 = z22, z2 = z12)[[2]]
v_4 = find(low = low, high = high, x1 = y2, y1 = x1, x2 = y1, y2 = x1, z1 = z12, z2 = z11)[[2]]
vx = cbind(v.1, v_2, v.3, v_4)
vy = cbind(v_1, v.2, v_3, v.4)
xPoints = reduceProc(vx)
yPoints = reduceProc(vy)
xPoints
xx = recordPlot()
x = xx[[1]][[11]][[2]][[2]][1:6]
y = xx[[1]][[11]][[2]][[3]][1:6]
z = xx[[1]][[11]][[2]][[4]][1:6, 1:6]
s = xx[[1]][[11]][[2]][[5]][1:6]
xt = rep(rep(x, each = length(y)), each = length(s))
yt = rep(rep(x, length(x)), each = length(s))
zt = rep(as.numeric(z), each = length(s))
st = rep(s, (length(x) - 1) * (length(y) - 1))
xr = rep(x, each = length(y))
yr = rep(y, length(x))
zr = as.numeric(z)
tot = length(x) * length(y)
det = seq(1, length(xr), by = length(x))
x1 = xr[1:(tot - length(x))][-det]
x2 = xr[(length(y) + 1):tot][-det]
y1 = yr[1:(tot - length(x))][-(det - 1)]
y2 = yr[(length(y) + 1):tot][-det]
z11 = zr[1:(tot - length(x))][-(det - 1)]
z12 = zr[2:(tot - length(x) + 1)][-(det - 1)]
z21 = zr[(length(x) + 1) : (tot - 1)][-(det - 1)]
z22 = zr[(length(x) + 2) : (tot)][-(det - 1)]
x1 = rep(x1, each = length(s) - 1)
x2 = rep(x2, each = length(s) - 1)
y1 = rep(y1, each = length(s) - 1)
y2 = rep(y2, each = length(s) - 1)
z11 = rep(z11, each = length(s) - 1)
z12 = rep(z12, each = length(s) - 1)
z21 = rep(z21, each = length(s) - 1)
z22 = rep(z22, each = length(s) - 1)
scut = seq(0, length(st), by = 6)[-1]
low = st[-scut]
high = st[-((scut - 6) + 1)]
z1 = z11; z2 = z21; x1 = x1; x2 = x2;
## vectors-join
## inside if z1 > z2
source('C:/Users/yeamin/Desktop/master/loading.r')
v.1 = find(low = low, high = high, x1 = x2, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[1]]
v.2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[1]]
v.3 = find(low = low, high = high, x1 = x2, y1 = y2, x2 = x1, y2 = y2, z1 = z22, z2 = z12)[[1]]
v.4 = find(low = low, high = high, x1 = y2, y1 = x1, x2 = y1, y2 = x1, z1 = z12, z2 = z11)[[1]]
v_1 = find(low = low, high = high, x1 = x1, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[2]]
v_2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[2]]
v_3 = find(low = low, high = high, x1 = x2, y1 = y2, x2 = x1, y2 = y2, z1 = z22, z2 = z12)[[2]]
v_4 = find(low = low, high = high, x1 = y2, y1 = x1, x2 = y1, y2 = x1, z1 = z12, z2 = z11)[[2]]
vx = cbind(v.1, v_2, v.3, v_4)
vy = cbind(v_1, v.2, v_3, v.4)
xPoints = reduceProc(vx)
yPoints = reduceProc(vy)
xPoints
xx = recordPlot()
x = xx[[1]][[11]][[2]][[2]][1:6]
y = xx[[1]][[11]][[2]][[3]][1:6]
z = xx[[1]][[11]][[2]][[4]][1:6, 1:6]
s = xx[[1]][[11]][[2]][[5]][1:6]
xt = rep(rep(x, each = length(y)), each = length(s))
yt = rep(rep(x, length(x)), each = length(s))
zt = rep(as.numeric(z), each = length(s))
st = rep(s, (length(x) - 1) * (length(y) - 1))
xr = rep(x, each = length(y))
yr = rep(y, length(x))
zr = as.numeric(z)
tot = length(x) * length(y)
det = seq(1, length(xr), by = length(x))
x1 = xr[1:(tot - length(x))][-det]
x2 = xr[(length(y) + 1):tot][-det]
y1 = yr[1:(tot - length(x))][-(det - 1)]
y2 = yr[(length(y) + 1):tot][-det]
z11 = zr[1:(tot - length(x))][-(det - 1)]
z12 = zr[2:(tot - length(x) + 1)][-(det - 1)]
z21 = zr[(length(x) + 1) : (tot - 1)][-(det - 1)]
z22 = zr[(length(x) + 2) : (tot)][-(det - 1)]
x1 = rep(x1, each = length(s) - 1)
x2 = rep(x2, each = length(s) - 1)
y1 = rep(y1, each = length(s) - 1)
y2 = rep(y2, each = length(s) - 1)
z11 = rep(z11, each = length(s) - 1)
z12 = rep(z12, each = length(s) - 1)
z21 = rep(z21, each = length(s) - 1)
z22 = rep(z22, each = length(s) - 1)
scut = seq(0, length(st), by = 6)[-1]
low = st[-scut]
high = st[-((scut - 6) + 1)]
## vectors-join
## inside if z1 > z2
source('C:/Users/yeamin/Desktop/master/loading.r')
v.1 = find(low = low, high = high, x1 = x2, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[1]]
v.2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[1]]
v.3 = find(low = low, high = high, x1 = x2, y1 = y2, x2 = x1, y2 = y2, z1 = z22, z2 = z12)[[1]]
v.4 = find(low = low, high = high, x1 = y2, y1 = x1, x2 = y1, y2 = x1, z1 = z12, z2 = z11)[[1]]
v_1 = find(low = low, high = high, x1 = x1, y1 = y1, x2 = x2, y2 = y1, z1 = z11, z2 = z21)[[2]]
v_2 = find(low = low, high = high, x1 = y1, y1 = x2, x2 = y2, y2 = x2, z1 = z21, z2 = z22)[[2]]
v_3 = find(low = low, high = high, x1 = x2, y1 = y2, x2 = x1, y2 = y2, z1 = z22, z2 = z12)[[2]]
v_4 = find(low = low, high = high, x1 = y2, y1 = x1, x2 = y1, y2 = x1, z1 = z12, z2 = z11)[[2]]
vx = cbind(v.1, v_2, v.3, v_4)
vy = cbind(v_1, v.2, v_3, v.4)
xPoints = reduceProc(vx)
yPoints = reduceProc(vy)
grid.newpage()
pushViewport(vp = viewport(0.5, 0.5, 1, 1, xscale = range(x), yscale = range(y)))
grid.polygon(out$x[1:npt], out$y[1:npt], default.units = 'native',
gp = gpar(fill = cols, col = NA))
xPoints
y1
y2
